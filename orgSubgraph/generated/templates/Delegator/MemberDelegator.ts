// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class AllianceCreated extends ethereum.Event {
  get params(): AllianceCreated__Params {
    return new AllianceCreated__Params(this);
  }
}

export class AllianceCreated__Params {
  _event: AllianceCreated;

  constructor(event: AllianceCreated) {
    this._event = event;
  }

  get allianceNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class DelegatorCalled extends ethereum.Event {
  get params(): DelegatorCalled__Params {
    return new DelegatorCalled__Params(this);
  }
}

export class DelegatorCalled__Params {
  _event: DelegatorCalled;

  constructor(event: DelegatorCalled) {
    this._event = event;
  }

  get delegatorId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get caller(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class DelegatorNameSet extends ethereum.Event {
  get params(): DelegatorNameSet__Params {
    return new DelegatorNameSet__Params(this);
  }
}

export class DelegatorNameSet__Params {
  _event: DelegatorNameSet;

  constructor(event: DelegatorNameSet) {
    this._event = event;
  }

  get delegatorId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class MemberCreated extends ethereum.Event {
  get params(): MemberCreated__Params {
    return new MemberCreated__Params(this);
  }
}

export class MemberCreated__Params {
  _event: MemberCreated;

  constructor(event: MemberCreated) {
    this._event = event;
  }

  get memberId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get adminAddr(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class MemberDelegatorAdded extends ethereum.Event {
  get params(): MemberDelegatorAdded__Params {
    return new MemberDelegatorAdded__Params(this);
  }
}

export class MemberDelegatorAdded__Params {
  _event: MemberDelegatorAdded;

  constructor(event: MemberDelegatorAdded) {
    this._event = event;
  }

  get memberId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get delegatorAddr(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class MemberJoinedOrganization extends ethereum.Event {
  get params(): MemberJoinedOrganization__Params {
    return new MemberJoinedOrganization__Params(this);
  }
}

export class MemberJoinedOrganization__Params {
  _event: MemberJoinedOrganization;

  constructor(event: MemberJoinedOrganization) {
    this._event = event;
  }

  get orgId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get memberId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class MemberLeavedOrganization extends ethereum.Event {
  get params(): MemberLeavedOrganization__Params {
    return new MemberLeavedOrganization__Params(this);
  }
}

export class MemberLeavedOrganization__Params {
  _event: MemberLeavedOrganization;

  constructor(event: MemberLeavedOrganization) {
    this._event = event;
  }

  get orgId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get memberId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class OrganizationCreated extends ethereum.Event {
  get params(): OrganizationCreated__Params {
    return new OrganizationCreated__Params(this);
  }
}

export class OrganizationCreated__Params {
  _event: OrganizationCreated;

  constructor(event: OrganizationCreated) {
    this._event = event;
  }

  get orgId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get name(): string {
    return this._event.parameters[1].value.toString();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ParticipantJoinedAlliance extends ethereum.Event {
  get params(): ParticipantJoinedAlliance__Params {
    return new ParticipantJoinedAlliance__Params(this);
  }
}

export class ParticipantJoinedAlliance__Params {
  _event: ParticipantJoinedAlliance;

  constructor(event: ParticipantJoinedAlliance) {
    this._event = event;
  }

  get allianceNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get participantId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class ParticipantLeavedAlliance extends ethereum.Event {
  get params(): ParticipantLeavedAlliance__Params {
    return new ParticipantLeavedAlliance__Params(this);
  }
}

export class ParticipantLeavedAlliance__Params {
  _event: ParticipantLeavedAlliance;

  constructor(event: ParticipantLeavedAlliance) {
    this._event = event;
  }

  get allianceNumber(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get participantId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class VotingPowerSetToMember extends ethereum.Event {
  get params(): VotingPowerSetToMember__Params {
    return new VotingPowerSetToMember__Params(this);
  }
}

export class VotingPowerSetToMember__Params {
  _event: VotingPowerSetToMember;

  constructor(event: VotingPowerSetToMember) {
    this._event = event;
  }

  get orgId(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get memberId(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get votingPower(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class MemberDelegator extends ethereum.SmartContract {
  static bind(address: Address): MemberDelegator {
    return new MemberDelegator("MemberDelegator", address);
  }

  memberId(): Bytes {
    let result = super.call("memberId", "memberId():(bytes32)", []);

    return result[0].toBytes();
  }

  try_memberId(): ethereum.CallResult<Bytes> {
    let result = super.tryCall("memberId", "memberId():(bytes32)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  name(): string {
    let result = super.call("name", "name():(string)", []);

    return result[0].toString();
  }

  try_name(): ethereum.CallResult<string> {
    let result = super.tryCall("name", "name():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _memberId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CallDelegatorCall extends ethereum.Call {
  get inputs(): CallDelegatorCall__Inputs {
    return new CallDelegatorCall__Inputs(this);
  }

  get outputs(): CallDelegatorCall__Outputs {
    return new CallDelegatorCall__Outputs(this);
  }
}

export class CallDelegatorCall__Inputs {
  _call: CallDelegatorCall;

  constructor(call: CallDelegatorCall) {
    this._call = call;
  }
}

export class CallDelegatorCall__Outputs {
  _call: CallDelegatorCall;

  constructor(call: CallDelegatorCall) {
    this._call = call;
  }
}

export class SetDelegatorNameCall extends ethereum.Call {
  get inputs(): SetDelegatorNameCall__Inputs {
    return new SetDelegatorNameCall__Inputs(this);
  }

  get outputs(): SetDelegatorNameCall__Outputs {
    return new SetDelegatorNameCall__Outputs(this);
  }
}

export class SetDelegatorNameCall__Inputs {
  _call: SetDelegatorNameCall;

  constructor(call: SetDelegatorNameCall) {
    this._call = call;
  }

  get _name(): string {
    return this._call.inputValues[0].value.toString();
  }
}

export class SetDelegatorNameCall__Outputs {
  _call: SetDelegatorNameCall;

  constructor(call: SetDelegatorNameCall) {
    this._call = call;
  }
}
