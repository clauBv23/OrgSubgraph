
# testing the subgraph matchstick 

interface IParticipant {
  id: ID! # bytes32
  name: String! # string
  alliance: Alliance
}

type Member implements IParticipant @entity(immutable: false) {
  id: ID! # bytes32
  name: String! # string
  adminAddr: Bytes! # address
  organization: [MemberOrganization!]! @derivedFrom(field: "member")  
  delegator: Delegator
  alliance: Alliance
}

type Delegator @entity(immutable: false) {
  id: ID! # bytes32   `the id is the member id`
  address: Bytes! # address
  name: String # string
  member: Member! 
  lastCaller: Bytes # address
}

type Organization implements IParticipant @entity(immutable: true) {
  id: ID! # bytes32
  name: String! # string
  owner: Bytes! # address
  member: [MemberOrganization!]! @derivedFrom(field: "organization")
  alliance: Alliance
}

# many to many relationship
type MemberOrganization @entity(immutable: false){
  id: ID! # Set to `[memberId, organizationId].join('-')`
  member: Member!
  organization: Organization!
  votingPower: BigInt # uint256
}

type Alliance @entity(immutable: false) {
  id: ID! # bytes32
  participant: [IParticipant!]! @derivedFrom(field: "alliance")
}